<Activity mc:Ignorable="sap sap2010" x:Class="Verify" this:Verify.lat="1.4332" this:Verify.lon="103.8416" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:et="clr-namespace:EN.Telegram;assembly=EN.Telegram" xmlns:eta="clr-namespace:EN.Telegram.Activities;assembly=EN.Telegram.Activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="clr-namespace:PhotoSortBot_Windows;assembly=DataService.PhotoSortBot_Windows" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:u="clr-namespace:UiPathTeam_Barcode;assembly=UiPathTeam.Barcode" xmlns:uda="clr-namespace:UiPath.DataService.Activities;assembly=UiPath.DataService.Activities.Core" xmlns:udam="clr-namespace:UiPath.DataService.Activities.Models;assembly=UiPath.DataService.Activities.Core" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="fileName" Type="InArgument(x:String)" />
    <x:Property Name="lat" Type="InArgument(x:Double)" />
    <x:Property Name="lon" Type="InArgument(x:Double)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1217.6,5365.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Verify_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="118">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>ZXing</x:String>
      <x:String>UiPathTeam_Barcode</x:String>
      <x:String>ZXing.Windows.Compatibility</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>UiPath.Python.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>EN.Telegram</x:String>
      <x:String>EN.Telegram.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>PhotoSortBot_Windows</x:String>
      <x:String>UiPath.DataService.Activities.Models</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="136">
      <AssemblyReference>DataService.PhotoSortBot_Windows</AssemblyReference>
      <AssemblyReference>EN.Telegram</AssemblyReference>
      <AssemblyReference>EN.Telegram.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPathTeam.Barcode</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>zxing</AssemblyReference>
      <AssemblyReference>ZXing.Windows.Compatibility</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Verify" sap:VirtualizedContainerService.HintSize="1228,5300.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="qrOrderNumber" />
      <Variable x:TypeArguments="x:String" Name="ocrUnitNumber" />
      <Variable x:TypeArguments="x:String" Name="DeliveryUnitExcel" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="Validity" />
      <Variable x:TypeArguments="x:String" Name="TeleID" />
      <Variable x:TypeArguments="ui:Image" Name="imageQR" />
      <Variable x:TypeArguments="scg:IList(p:DeliveryExcel)" Name="orderInfo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Parallel sap:VirtualizedContainerService.HintSize="1165.6,474.4" sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Sequence sap2010:Annotation.AnnotationText="Unit No. Extractor&#xA;" sap:VirtualizedContainerService.HintSize="496,428" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:Image" Name="imageUnit" />
          <Variable x:TypeArguments="ui:Image" Name="regionCroppingTop" />
          <Variable x:TypeArguments="x:Int32" Name="height" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LoadImage DisplayName="Load Image" FileName="[fileName]" sap:VirtualizedContainerService.HintSize="433.6,85.6" sap2010:WorkflowViewState.IdRef="LoadImage_1" Image="[imageUnit]" />
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:Image">[regionCroppingTop]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:Image">[imageUnit.CropImage(New Rectangle(0, 0, imageUnit.Width, cint(imageUnit.Height/2)))]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:MicrosoftAzureComputerVisionOCR FilterRegion="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ApiKey="placeholder" ComputeSkewAngle="False" DisplayName="Microsoft Azure Computer Vision OCR" Endpoint="https://testui.cognitiveservices.azure.com/" ExtractWords="False" HandwritingRecognition="False" sap:VirtualizedContainerService.HintSize="433.6,24.8" sap2010:WorkflowViewState.IdRef="MicrosoftAzureComputerVisionOCR_1" Image="[regionCroppingTop]" Language="english" Text="[ocrUnitNumber]" />
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="OrderID QR/Barcode Extractor" sap:VirtualizedContainerService.HintSize="496,428" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:Image" Name="regionCroppingBottom" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LoadImage DisplayName="Load Image" FileName="[fileName]" sap:VirtualizedContainerService.HintSize="433.6,85.6" sap2010:WorkflowViewState.IdRef="LoadImage_2" Image="[imageQR]" />
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:Image">[regionCroppingBottom]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:Image">[imageQR.CropImage(New Rectangle(0, cint(imageQR.Height/2), imageQR.Width, cint(imageQR.Height/2)))]</InArgument>
          </Assign.Value>
        </Assign>
        <u:Decode_Image Format="{x:Null}" Charset="UTF-8" DisplayName="Decode Image" sap:VirtualizedContainerService.HintSize="433.6,24.8" sap2010:WorkflowViewState.IdRef="Decode_Image_1" Image="[regionCroppingBottom]" Output="[qrOrderNumber]" />
      </Sequence>
    </Parallel>
    <If Condition="[string.IsNullOrEmpty(qrOrderNumber) = true]" sap:VirtualizedContainerService.HintSize="1165.6,4674.4" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw Exception="[new Exception(&quot;Invalid QR!&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="769.6,4311.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <uda:QueryEntityRecords x:TypeArguments="p:DeliveryExcel" ContinueOnError="False" DisplayName="Query Entity Records" EntityId="ed5d1186-8cc4-ed11-a8e0-0022489f904c" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="726.4,140.8" sap2010:WorkflowViewState.IdRef="QueryEntityRecords`1_2" OutputRecords="[orderInfo]" QueriedEntityId="ed5d1186-8cc4-ed11-a8e0-0022489f904c" Skip="0" SortAscending="True" SortByField="Id" TimeoutInMs="30000" Top="100">
            <uda:QueryEntityRecords.FilterArguments>
              <uda:FilterArgument FilterActivityType="{x:Null}">
                <uda:FilterArgument.Filter>
                  <uda:GroupFilter Index="0" Operator="AND">
                    <uda:GroupFilter.Filters>
                      <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                        <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="OrderId" FieldType="UiPath.DataService.Core.Models.EntityField" Operator="=" ValueIndex="0" />
                      </scg:List>
                    </uda:GroupFilter.Filters>
                    <uda:GroupFilter.Groups>
                      <scg:List x:TypeArguments="uda:GroupFilter" Capacity="0" />
                    </uda:GroupFilter.Groups>
                  </uda:GroupFilter>
                </uda:FilterArgument.Filter>
              </uda:FilterArgument>
            </uda:QueryEntityRecords.FilterArguments>
            <uda:QueryEntityRecords.FilterValues>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <InArgument x:TypeArguments="x:String">[qrOrderNumber]</InArgument>
              </scg:List>
            </uda:QueryEntityRecords.FilterValues>
            <uda:QueryEntityRecords.TotalRecords>
              <OutArgument x:TypeArguments="x:Int64" />
            </uda:QueryEntityRecords.TotalRecords>
          </uda:QueryEntityRecords>
          <If sap2010:Annotation.AnnotationText="Check if QR reading is exist as per the database." Condition="[orderInfo.IsNullOrEmpty = false]" sap:VirtualizedContainerService.HintSize="726.4,2572" sap2010:WorkflowViewState.IdRef="If_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="Check if address is valid.&#xA;1. Addreess tally with the Unit No.&#xA;2. GPS location is within proximity&#xA;--&gt; update validity in the variable." sap:VirtualizedContainerService.HintSize="692.8,2177.6" sap2010:WorkflowViewState.IdRef="Sequence_30">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If sap2010:Annotation.AnnotationText="Check if Unit No. matches the database." Condition="[System.Text.RegularExpressions.Regex.Replace(ocrUnitNumber,&quot;\D&quot;,&quot;&quot;) = System.Text.RegularExpressions.Regex.Replace(orderInfo(0).UnitNumber,&quot;\D&quot;,&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="649.6,2088" sap2010:WorkflowViewState.IdRef="If_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="616,1693.6" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="JsonString" />
                        <Variable x:TypeArguments="njl:JObject" Name="JsonObject" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap2010:Annotation.AnnotationText="Extract Geocoordinates of the location in database." sap:VirtualizedContainerService.HintSize="572.8,1604" sap2010:WorkflowViewState.IdRef="Sequence_27">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Double" Name="lat_actual" />
                          <Variable x:TypeArguments="x:Double" Name="lon_actual" />
                          <Variable x:TypeArguments="x:Double" Name="WithinZone" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" ContinueOnError="False" DisplayName="HTTP Request" EnableSSLVerification="True" EndPoint="http://dev.virtualearth.net/REST/v1/Locations?" sap:VirtualizedContainerService.HintSize="510.4,347.2" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" Result="[JsonString]" TimeoutMS="6000">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Body>
                            <InArgument x:TypeArguments="x:String" />
                          </ui:HttpClient.Body>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.FileAttachments>
                            <InArgument x:TypeArguments="scg:ICollection(upr:ILocalResource)" />
                          </ui:HttpClient.FileAttachments>
                          <ui:HttpClient.Headers>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <InArgument x:TypeArguments="x:String" x:Key="countryRegion">SG</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="addressLine">[System.Text.RegularExpressions.Regex.Replace(orderInfo(0).DeliveryAddress, " ", "-")]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="maxResults">1</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="key">Ao1vRy5HfHA29NnRG0KS9ZBsvxLMgoJgBCuEBf8Pw6NVnA3jhOlRVFldRxyHKdF6</InArgument>
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.ResourcePath>
                            <InArgument x:TypeArguments="x:String" />
                          </ui:HttpClient.ResourcePath>
                          <ui:HttpClient.ResponseAttachment>
                            <OutArgument x:TypeArguments="upr:ILocalResource" />
                          </ui:HttpClient.ResponseAttachment>
                          <ui:HttpClient.ResponseHeaders>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" />
                          </ui:HttpClient.ResponseHeaders>
                          <ui:HttpClient.StatusCode>
                            <OutArgument x:TypeArguments="x:Int32" />
                          </ui:HttpClient.StatusCode>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:HttpClient>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="510.4,90.4" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[JsonObject]" JsonString="[JsonString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[lat_actual]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(JsonObject("resourceSets")(0)("resources")(0)("geocodePoints")(0)("coordinates")(0))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[lon_actual]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(JsonObject("resourceSets")(0)("resources")(0)("geocodePoints")(0)("coordinates")(1))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[WithinZone]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[6371 * 2 * Math.Asin(Math.Sqrt(Math.Sin((lat_actual - lat) * Math.PI / 180 / 2) ^ 2 + Math.Cos(lat * Math.PI / 180) * Math.Cos(lat_actual * Math.PI / 180) * Math.Sin((lon_actual - lon) * Math.PI / 180 / 2) ^ 2))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap2010:Annotation.AnnotationText="Check if the coordinates of phototaken is within zone of geocoordinates of the address in database." Condition="[WithinZone &lt;= 1.00]" sap:VirtualizedContainerService.HintSize="510.4,578.4" sap2010:WorkflowViewState.IdRef="If_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[Validity]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw Exception="[new Exception(&quot;You are in the wrong area. Please Check!&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_4" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Throw Exception="[new Exception(&quot;Wrong Unit!&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:Annotation.AnnotationText="Send Notification to drive to retake image and quit.&#xA;--&gt; OrderID does not exist in DB" sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw Exception="[new Exception(&quot;OrderID not in Database!&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[Validity]" sap:VirtualizedContainerService.HintSize="726.4,1428.8" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="Send notification to Client" sap:VirtualizedContainerService.HintSize="526.4,914.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <uda:UpdateEntityRecord x:TypeArguments="p:DeliveryExcel" InputEntity="{x:Null}" IsInRecordView="{x:Null}" VisibleDynamicPropertiesInfo="{x:Null}" ContinueOnError="False" DisplayName="Update Entity Record" EntityId="ed5d1186-8cc4-ed11-a8e0-0022489f904c" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="483.2,277.6" sap2010:WorkflowViewState.IdRef="UpdateEntityRecord`1_3" InputEntityInFieldView="[new PhotoSortBot_Windows.DeliveryExcel() With {  .DeliveryDate = datetime.Now.ToString(&quot;MM/dd/yyyy hh:mm:ss tt&quot;),  .DeliveryStatus = true, .Id = orderInfo(0).Id }]" RecordId="[orderInfo(0).Id]" TimeoutInMs="30000">
                  <uda:UpdateEntityRecord.OutputEntity>
                    <OutArgument x:TypeArguments="p:DeliveryExcel" />
                  </uda:UpdateEntityRecord.OutputEntity>
                  <uda:UpdateEntityRecord.State>
                    <udam:RecordState>
                      <udam:RecordState.SelectedFields>
                        <scg:List x:TypeArguments="udam:DynamicEntityField" Capacity="2">
                          <udam:DynamicEntityField Id="e4b2ea87-92c4-ed11-a8e0-0022489f904c" Name="DeliveryDate">
                            <udam:DynamicEntityField.ArgumentValue>
                              <InArgument x:TypeArguments="x:String">[datetime.Now.ToString("MM/dd/yyyy hh:mm:ss tt")]</InArgument>
                            </udam:DynamicEntityField.ArgumentValue>
                          </udam:DynamicEntityField>
                          <udam:DynamicEntityField Id="36515081-92c4-ed11-a8e0-0022489f904c" Name="DeliveryStatus">
                            <udam:DynamicEntityField.ArgumentValue>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </udam:DynamicEntityField.ArgumentValue>
                          </udam:DynamicEntityField>
                        </scg:List>
                      </udam:RecordState.SelectedFields>
                    </udam:RecordState>
                  </uda:UpdateEntityRecord.State>
                </uda:UpdateEntityRecord>
                <eta:TelegramScope ContinueOnError="{x:Null}" APITOKEN="placeholder" DisplayName="Telegram Scope" sap:VirtualizedContainerService.HintSize="483.2,507.2" sap2010:WorkflowViewState.IdRef="TelegramScope_1">
                  <eta:TelegramScope.Body>
                    <ActivityAction x:TypeArguments="et:IObjectContainer">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="et:IObjectContainer" Name="ScopeActivity" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,420.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <eta:SendMessage ContinueOnError="{x:Null}" STATUSCODE="{x:Null}" CHATID="[orderInfo(0).ChatbotId.ToString]" DisplayName="Send Message" sap:VirtualizedContainerService.HintSize="387.2,134.4" sap2010:WorkflowViewState.IdRef="SendMessage_1" MESSAGE="[&quot;Your Package has been delivered to your specified address, &quot; + orderInfo(0).DeliveryAddress + &quot;!&quot;]" />
                        <eta:SendPhoto ContinueOnError="{x:Null}" STATUSCODE="{x:Null}" CHATID="[orderInfo(0).ChatbotId.ToString]" DisplayName="Send Photo" sap:VirtualizedContainerService.HintSize="387.2,134.4" IMAGEPATH="[fileName]" sap2010:WorkflowViewState.IdRef="SendPhoto_1" />
                      </Sequence>
                    </ActivityAction>
                  </eta:TelegramScope.Body>
                </eta:TelegramScope>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:Annotation.AnnotationText="Get Deliverer to redeliver.&#xA;1. Wrong unit No.&#xA;2. Wrong area." sap:VirtualizedContainerService.HintSize="492.8,331.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="Skip.&#xA;" sap:VirtualizedContainerService.HintSize="449.6,241.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="387.2,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_18" Text="[&quot;Nothing happened... return to waiting...&quot;]" />
                </Sequence>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>